import { create_UUID } from "./StringUtils.js"; // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ UUID

const body = document.querySelector("body.tests-app"); // –í—ã–±–∏—Ä–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ tests-app
const appBlock = document.querySelector("#app"); // –í—ã–±–∏—Ä–∞–µ–º div#app –∫–æ—Ç–æ—Ä—ã–π –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç from#objective, —á—Ç–æ –Ω–∏–∂–µ
const mainForm = document.querySelector("#objective"); // –í—ã–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ–æ—Ä–º—É form#objective
const mainBtn = document.querySelector("button.main"); // –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å

const modalForm = document.querySelector("#modal_form"); // –ú–æ–¥–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –¥–ª—è  –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä—É—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
const modalBtn = document.querySelector("button.modal"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è small modal –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–æ–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const modalBtnClose = document.querySelector("button.modal-close"); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
const optionsBtn = document.querySelector("button.options"); // –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å \ —Å–∫—Ä—ã—Ç—å –æ–ø—Ü–∏–∏

const tcTitle = document.querySelector("#tc_title"); // Input –≤–≤–æ–¥–∞ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
const tcSteps = document.querySelector("#text_case"); // Textarea –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –¥–ª—è —Ç–µ—Å—Ç–∞
const tcList = document.querySelector(".added-tc"); // –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ <ul> || let testTasksHolder = document.getElementById("tc-list");

const addTestCase = document.querySelector("#add_test_case"); // –ë–æ–ª—å—à–∞—è –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
const addNew = document.querySelector("#add_new"); // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω —Ç–µ—Å—Ç

const formAdd = document.querySelector("#modal_form .input-block"); // Div –∫–æ—Ç–æ—Ä—ã–π –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç input & textarea –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ, –∫–æ—Ç–æ—Ä—ã–π –ª–µ–∂–∏—Ç –≤ —Ñ–æ—Ä–º–µ

const titleTextarea = document.querySelector("#input-title"); // –ì–ª–∞–≤–Ω—ã–π Input c https://
const mainTextarea = document.querySelector("#textarea-main"); // null –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä

const consoleContainer = document.querySelector(".console-container"); // –ö–æ–Ω—Å–æ–ª—å –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å –±–µ–∫—ç–Ω–¥–∞
const consoleContainerContent = consoleContainer.querySelector(".content"); // –ë–ª–æ–∫ —Å –∫–ª–∞—Å—Å–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –∫–æ–Ω—Å–æ–ª–µ

const codeBlock = document.querySelector(".mockup-code"); // null
const consoleWindow = document.querySelector("#console"); // null
const iframeBlock = document.querySelector(".iframe-block"); // div info iframe-block
const infoBlock = document.querySelector(".info"); // –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–æ—Ç –∂–µ —Å–∞–º—ã–π –±–ª–æ–∫ div info iframe-block
const telegramBlock = document.querySelector(".telegram-block"); // –ë–ª–æ–∫ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–∞

const telegramTestBtn = document.querySelector(".logo"); // –õ–æ–≥–æ—Ç–∏–ø

let stompClient = null; // stompClient —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç –≤ –Ω—ë–º
let uuid = create_UUID(); // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
let scenarioCount = 0; // –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á—ë—Ç—á–∏–∫ scenarioCount –æ—Ç –Ω–µ–≥–æ –∏–¥—ë—Ç –∏–Ω–∫—Ä–∏–º–µ–Ω—Ç—ã –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–≤–µ–≤ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ .added-tc-item + scenarioCount

// localStorage.clear();

// –§—É–Ω–∫—Ü–∏—è connect() —Å–æ–∑–¥–∞—ë—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä new SockJS —Å –∞–¥—Ä–µ—Å–æ–º —Å–æ–∫–µ—Ç–∞ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –æ—Ç–ø—Ä–∞–≤–∞–∫–∞ —Å–æ–∫–µ—Ç–æ–≤ –≤ spring
// –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ STOMP –æ–Ω –¥–æ–ª–∂–µ–Ω –≤—ã–∑–≤–∞—Ç—å —Å–≤–æ–π stompClient.connect() –º–µ—Ç–æ–¥ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ STOMP.
// –ú–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–∞, login –∏ passcode —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∞–∫–æ–π-—Ç–æ client-id.

function connect() {
  console.log("connect +");
  // const socket = new SockJS("https://api.autotests.cloud/ws"); // todo add exception
  const socket = new SockJS("http://localhost:8080/ws"); // todo add exception
  // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Stomp.client(url)–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—Ç–∏–≤–Ω—ã—Ö –≤–µ–±-—Å–æ–∫–µ—Ç–æ–≤ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ, Stomp.over(ws) –µ—Å–ª–∏ –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥—Ä—É–≥–æ–π —Ç–∏–ø –≤–µ–±-—Å–æ–∫–µ—Ç–æ–≤.
  stompClient = Stomp.over(socket);

  //–ü–æ–¥–∫–ª—é—á–∞–º —á–µ—Ä–µ–∑ SockJS —á–µ—Ä–µ–∑ STOMP –∫  –±—ç–∫—ç–Ω–¥—É Spring
  stompClient.connect({}, function (status) {
    console.log("Connected: " + status);

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –ø—Ä–æ—Å–ª—É—à–∫—É —Å –±–µ–∫—ç–Ω–¥–∞
    stompClient.subscribe(`/topic/${uuid}`, function (message) {
      console.log("Message: " + message);

      // –í—ã–∑—ã–≤–µ–º —Ñ—É–Ω–∫—Ü–∏—é addSocketEvent() –∏ –ø–µ—Ä–µ–¥–∞–µ–º —Ç—É–¥–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä JSON.parse(message.body) —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Å –±–µ–∫—ç–Ω–¥–∞
      addSocketEvent(JSON.parse(message.body));
    });
  });
}

// –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–µ–∫—ç–Ω–¥–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã div.instruction -> span.command
// –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç contentType switch \ case —Ä–µ–Ω–¥–µ—Ä–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç–≤–µ—Ç–æ–≤ —Å –±–µ–∫—ç–Ω–¥–∞

function addSocketEvent(message) {
  let lineCodeBlock = document.createElement("div");
  lineCodeBlock.className = "instruction";

  let lineCodeMessage = document.createElement("span");
  lineCodeMessage.className = "command";

  // pre.setAttribute("data-prefix", message.prefix);

  switch (message.contentType) {
    case "info":
      // pre.className = "list-auto flex";
      lineCodeMessage.innerHTML = `<code>${message.content}</code>`;
      break;
    case "generated":
      // pre.className = "text-warning flex";
      lineCodeMessage.innerHTML = `<code>${message.content}<a target="_blank" class="green-link" href="${message.url}">${message.urlText}</a></div></code>`;
      break;
    case "launched":
      // pre.className = "text-warning flex";
      lineCodeMessage.innerHTML = `<code>${message.content}<a target="_blank" class="green-link" href="${message.url}">${message.urlText}</a> </code> <label class="loader"></label>`;
      break;
    case "finished":
      // pre.className = "text-warning flex";
      lineCodeMessage.innerHTML = `<code>${message.content}<a target="_blank" class="green-link" href="${message.url}">${message.urlText}</a></div></code>`;
      document.querySelector(".loader").remove();
      break;
    case "in progress":
      // pre.className = "text-warning flex";
      lineCodeMessage.innerHTML = `<code>${message.content} </code>`;
      break;
    case "can-automate":
      // pre.className = "flex";
      lineCodeMessage.innerHTML = `<code>${message.content}</code>`;
      break;
    case "telegram-info":
      // pre.className = "flex";
      lineCodeMessage.innerHTML = `<code>${message.content}<a target="_blank" class="blue-link" href="${message.url}">${message.urlText}</a> üëà</code>`;
      break;
    case "telegram-notification":
      // pre.className = "flex";
      lineCodeMessage.innerHTML = `<code> </code>`;
      displayNotification(message.content);
      break;
    case "empty":
      // pre.className = "list-auto flex";
      lineCodeMessage.innerHTML = `<code> </code>`;
      break;
    case "error":
      // pre.className = "text-error flex";
      lineCodeMessage.innerHTML = `<code>${message.content}</code>`;
      break;
  }
  lineCodeBlock.append(lineCodeMessage);
  consoleContainerContent.append(lineCodeBlock);
  // scroll.getScrollElement().scrollTo({ top: 5000, behavior: "smooth" });
}

//–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω—è–∏ —Å —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞
function displayNotification(messagePath) {
  telegramBlock.innerHTML = `<iframe id="telegram-post-autotests_cloud-17"
    class="telegram-iframe" src="https://t.me/${messagePath}?embed=1&discussion=1&comments_limit=5&light=1"></iframe>`;
  telegramBlock.classList.remove("hidden");
}

//–§—É–Ω–∫—Ü–∏—è initForm –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤

const initForm = () => {
  connect(); // –í—ã–∑—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–æ–∫–µ—Ç–æ–≤

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∏ –ø–µ—Ä–µ–¥–∞–µ–º –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
  function submitForm(event) {
    // –ù–ï –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç.–µ –æ—Ç–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
    event.preventDefault();
    // alert(document.getElementById('input-title').value);
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–æ–Ω—Å–æ–ª—å—é || —É–¥–∞–ª—è–µ–º consoleContainer –∫–ª–∞—Å—Å hidden
    consoleContainer.classList.remove("hidden");
    // –ë–ª–æ–∫—É div#app –¥–æ–±–∞–≤–ª—è–µ–µ–º –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏
    appBlock.classList.add("hidden");
    // div iframe info –∫–æ—Ç–æ—Ä—ã–π —Å–ø—Ä–∞–≤–æ —Å–∫—Ä—ã–≤–∞–µ–º  –¥–æ–±–∞–≤–ª—è—è hidden telegramBlock.classList.remove("hidden");
    infoBlock.classList.add("hidden");

    // –í –ø–µ—Ä–µ–º–µ–Ω—É—é formData –º—ã –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä FormData(mainForm), –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç FormData —Ç.–µ
    // HTML-—Ñ–æ—Ä–º—É –Ω–∞ –æ—Å–Ω–æ–≤–µ mainForm –≥–ª–∞–≤–Ω–æ–π —Ñ–æ—Ä–º—ã form#objective.
    // –°—É—â–µ—Å—Ç–≤—É—é—â–∞—è HTML-—Ñ–æ—Ä–º–∞, –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—É—Å—Ç–∞—è —Ñ–æ—Ä–º–∞.
    const formData = new FormData(mainForm);
    // –í –ø–µ—Ä–µ–º–µ–Ω—É—é values –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã –º–µ—Ç–æ–¥–∞ Object.fromEntries() –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—â–µ–≥–æ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–±—ä–µ–∫—Ç –∏–∑
    // –º–µ—Ç–æ–¥ FormData.entries() –∫–æ—Ç–æ—Ä—ã–π –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç [Symbol.iterator], –ø–æ–∑–≤–æ–ª—è—é—â–µ–º—É –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –≤—Å–µ–º –∫–ª—é—á–∞–º/–∑–Ω–∞—á–µ–Ω–∏—è–º –≤ —ç—Ç–æ–º –æ–±—ä–µ–∫—Ç–µ.
    // –ö–ª—é—á –∫–∞–∂–¥–æ–π –ø–∞—Ä—ã - —ç—Ç–æ –æ–±—ä–µ–∫—Ç USVString, –∑–Ω–∞—á–µ–Ω–∏–µ - —ç—Ç–æ USVString –∏–ª–∏ Blob.
    const values = Object.fromEntries(formData.entries());

    console.log(values);
    console.log(values instanceof Object);

    if (values.url) {
      // –ï—Å–ª–∏ values.url —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      // values.price = "free";
      // values.email = "admin@qa.guru";
      values.tests = loadingStateFromStorage(); //–í —Å–≤–æ–π—Å—Ç–≤–æ tests –æ–±—ä–µ–∫—Ç–∞ values –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ loadingStateFromStorage() –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
      delete values["g-recaptcha-response"]; // –£–¥–∞–ª—è–µ–º —Ä–µ–∫–∞–ø—á—É
      // –í –ø–µ—Ä–µ–º–µ–Ω—É—é –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É JSON –∏–∑ –æ–±—ä–µ–∫—Ç–∞ values –∑–∞–º–µ–Ω—è—è on \ off –Ω–∞ –±—É–ª–∏–Ω–æ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è
      let stringValues = JSON.stringify(values)
        .replaceAll('"on"', true)
        .replaceAll('"off"', false);
      console.log("–¥–∞–Ω–Ω—ã–µ —Å –∑–∞–º–µ–Ω–æ–π " + stringValues);

      // –ü–µ—Ä–µ–¥–∞–µ–º
      stompClient.send(`/app/orders/${uuid}`, {}, stringValues);

      // consoleContainer.classList.remove("hidden");
      // –£–±–∏—Ä–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ–æ—Ä–º—É
      mainForm.classList.add("hidden");
      // –¢—É—Ç –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ, –ø–æ–∫–∞–∑—ã–≤—ã–µ–º iframeBlock
      iframeBlock.classList.remove("hidden");
      // –ò —Å–∫—Ä—ã–≤–∞–µ–º .info
      infoBlock.classList.add("hidden");
      // telegramBlock.classList.remove("hidden");

      // scroll = new SimpleBar(consoleWindow, { autoHide: false });

      // function add() {
      // 	let pre = document.createElement("pre");
      // 	// let scrollContent = document.querySelector(".simplebar-content");
      // 	pre.setAttribute("data-prefix", "$");
      // 	pre.innerHTML = `<code>npm i daisyui</code>`;
      // 	scrollContent.append(pre);
      // 	scroll.getScrollElement().scrollTo({ top: 5000, behavior: "smooth" });
      // 	// scroll.getScrollElement().scrollTop = scroll.getScrollElement().scrollHeight;
      // }

      // window.setInterval(add, 2500);

      mainForm.reset();
    } else {
      // if (!mainTextarea.value) {
      //   mainTextarea.classList.add("border-red-500");
      // }

      if (!titleTextarea.value) {
        titleTextarea.classList.add("border-red-500");
      }

      setTimeout(() => {
        // mainTextarea.classList.remove("border-red-500");
        titleTextarea.classList.remove("border-red-500");
      }, 2000);
    }
  }

  mainBtn.addEventListener("click", submitForm);
};

export { initForm };

initForm();

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function modalOpen() {
  body.classList.add("modal");
}
// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function modalClose() {
  body.classList.remove("modal");
}
// –§—É–Ω–∫—Ü–∏—è —Ç–æ–≥–ª
function optionsToggle() {
  body.classList.toggle("options-open");
}

// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç <li> —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á c lable, span, input#edit,
// textarea#edit, button#edit, button#delete –≤–Ω—É—Ç—Ä–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
// @param inputTestCaseString —Å—Ç—Ä–æ–∫–∞ –∏–∑ input
// @param textAreaTestCaseString —Å—Ç—Ä–æ–∫–∞ –∏–∑ textarea
let createNewTestElement = (
  inputTestCaseString,
  textAreaTestCaseString,
  itemID
) => {
  // –°–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞
  let listItem = document.createElement("li");
  listItem.id = itemID;
  // C–æ–∑–¥–∞—Ç—å span –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ—Ç–æ–º —Å–∫—Ä—ã—Ç
  let span = document.createElement("span");
  // –°–æ–∑–¥–∞—Ç—å label
  let label = document.createElement("label");
  // –°–æ–∑–¥–∞—Ç—å input (text)
  let editInput = document.createElement("input");
  // –°–æ–∑–¥–∞—Ç—å textarea (text)
  let editTextArea = document.createElement("textarea");
  // –°–æ–∑–¥–∞—Ç—å button.edit
  let editButton = document.createElement("button");
  // –°–æ–∑–¥–∞—Ç—å button.delete
  let deleteButton = document.createElement("button");

  setItemToLocalStorage(itemID++, inputTestCaseString, textAreaTestCaseString); // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ localStorage –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  // –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç, —Ç—Ä–µ–±—É—é—â–∏–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
  editInput.type = "text";
  editTextArea.name = "text-area";
  editButton.innerHTML = `<img src="img/edit.svg" width="20" height="20"></img>`;
  editButton.className = "medium modal edit";
  deleteButton.innerHTML = `<img src="img/trash.svg" width="20" height="20"></img>`;
  deleteButton.className = "medium modal delete";
  // label –∏ span –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–π–¥—É—Ç –∏–∑ value —Å –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  label.innerText = inputTestCaseString;
  label.className = "testItemText";
  span.innerText = textAreaTestCaseString;
  // –°–∫—Ä—ã–≤–∞–µ–º span
  span.setAttribute("hidden", "");
  // –í listItem –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã. —Ç.–µ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
  listItem.appendChild(label);
  listItem.appendChild(editInput);
  listItem.appendChild(span);
  listItem.appendChild(editTextArea);
  listItem.appendChild(editButton);
  listItem.appendChild(deleteButton);

  return listItem;
};

// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π test case
let addTestCaseItem = function () {
  console.log("Add test case");
  // –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
  // –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏–∑ –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç-–∑–∞–¥–∞–Ω–∏—è
  let listItem = createNewTestElement(
    tcTitle.value,
    tcSteps.value,
    scenarioCount++
  );

  // –î–æ–±–∞–≤–∏—Ç—å listItem –≤ tcList
  if (tcTitle.value.length > 0 && tcSteps.value.length > 0) {
    tcList.appendChild(listItem);
    bindTestCaseEvents(listItem);
    // tcTitle.value = "";
    // tcSteps.value = "";
  } else if (!tcTitle.value) {
    tcTitle.classList.add("border-red-500");
    console.warn("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Ç–µ—Å—Ç–∞");
  }
  setTimeout(() => {
    tcTitle.classList.remove("border-red-500");
  }, 2000);
};

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π test case
let editTestCase = function () {
  console.log("Edit test case");
  let listItem = this.parentNode;
  let editButton = this;
  let editInput = listItem.querySelector("input[type=text]");
  let editText = listItem.querySelector("textarea[name=text-area]");
  let label = listItem.querySelector("label");
  let spanText = listItem.querySelector("span");
  let containsClass = listItem.classList.contains("editMode");
  let listItemID = listItem.id;
  console.log(listItemID);

  // –ï—Å–ª–∏ –∫–ª–∞—Å—Å —Ä–æ–¥–∏—Ç–µ–ª—è - .editMode
  if (containsClass) {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∏–∑ .editMode
    // Label text c –∫–ª–∞—Å—Å–æ–º testItemText —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è input's (text) value
    label.innerText = editInput.value;
    editButton.innerHTML = `<img src="img/edit.svg" width="20" height="20"></img>`;
    // Span text —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è text-area's (text-area) value
    spanText.innerText = editText.value;
    setItemToLocalStorage(listItemID, editInput.value, editText.value);
  } else {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤ .editMode
    // input (text) value —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è label's text
    editInput.value = label.innerText;
    editButton.innerHTML = `<img src="img/floppy-disk.svg" width="20" height="20"></img>`;

    // textarea (text-area) value —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è span text
    editText.value = spanText.innerText;
  }
  // Toggle –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ .editMode –≤ li
  listItem.classList.toggle("editMode");
};

// –£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—ã–π test case
let deleteTestCase = function () {
  console.log("Delete task");
  let listItem = this.parentNode;
  let ul = listItem.parentNode;
  // –£–¥–∞–ª—è–µ–º <li> –∏–∑ ul
  ul.removeChild(listItem);
  let listItemID = listItem.id;
  console.log(listItemID);
  localStorage.removeItem(listItemID);
};

// –ü–æ–º–µ—Ç–∏—Ç—å test case –∫–∞–∫ –¥–æ–±–∞–≤–ª–µ–Ω—ã–π
let addedTestCase = function () {
  console.log("Test task done");
  // –î–æ–±–∞–≤—å—Ç–µ test case  <li></li> –≤ #test-tasks
  let listItem = this.parentNode;
  tcList.appendChild(listItem);
  bindTestCaseEvents(listItem);

};

let bindTestCaseEvents = function (taskListItem) {
  console.log("Bind list item events");
  // –í—ã–±–∏—Ä–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã taskListItems
  let editButton = taskListItem.querySelector("button.edit");
  let deleteButton = taskListItem.querySelector("button.delete");

  // –ø—Ä–∏–≤—è–∑–∞—Ç—å editTask –∫ –∫–Ω–æ–ø–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  editButton.onclick = editTestCase;

  // –ø—Ä–∏–≤—è–∑–∞—Ç—å deleteTask –∫ –∫–Ω–æ–ø–∫–µ —É–¥–∞–ª–µ–Ω–∏—è
  deleteButton.onclick = deleteTestCase;
};
// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —â–µ–ª—á–∫–∞ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é addTestCaseItem –Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
addTestCase.addEventListener("click", addNewFields);
// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —â–µ–ª—á–∫–∞ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é addNewFields
addNew.addEventListener("click", addTestCaseItem);


// –ø–µ—Ä–µ–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ ul
for (let i = 0; i < tcList.children.length; i++) {
  // –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∫ –¥–æ—á–µ—Ä–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å–ø–∏—Å–∫–∞
  bindTestCaseEvents(tcList.children[i]);
}

// –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –¥–æ–±–∞–≤–ª–µ–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –∏–∑ —Ä–∞–∑–æ–±—Ä–∞–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–∑ localStorage
function loadingStateFromStorage() {
  let archive = []; // –ú–∞—Å—Å–∏–≤ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  let keys = Object.keys(localStorage); //–í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –≤ —Ç–æ–º –∂–µ –ø–æ—Ä—è–¥–∫–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω–∏ –±—ã –æ–±—Ö–æ–¥–∏–ª–∏—Å—å —Ü–∏–∫–ª–æ–º for... in - —ç—Ç–æ –±—ã—Å—Ç—Ä–µ–µ
  let i = 0;
  let key;
  // –ü—Ä–æ—Ö–æ–¥–∏–º —Ü–∏–∫–ª–æ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç—ã –∏–∑ localStorage
  console.log("localStorage: " + localStorage);
  console.log("keys Object.keys(localStorage): " + keys);
  for (; (key = keys[i]); i++) {
    console.log("i: " + i);
    console.log("key: " + key);
    if (key > 0 && key !== "_grecaptcha") {
      console.log("localStorage.getItem(key): " + localStorage.getItem(key));
      console.log(
        "JSON.parse(localStorage.getItem(key)): " +
          JSON.parse(localStorage.getItem(key))
      );
      archive.push(JSON.parse(localStorage.getItem(key)));
    } else if  (key !== "_grecaptcha") {
      localStorage.removeItem('_grecaptcha')
      continue; // –ø—Ä–æ–ø—É—Å—Ç–∏—Ç –∏ —É–¥–∞–ª–∏—Ç—å –∫–ª—é—á–∏ _grecaptcha
    }
  } 

  console.log("archive: " + JSON.stringify(archive));

  return archive;
}

// function getItemsFromStorage() {
//   let steps = loadingStateFromStorage();

// steps.forEach(el => {

//   console.log(el.title, el.steps, el.id);

// })
// }


function addNewFields() {
  addTestCaseItem();
  tcTitle.value = "";
  tcSteps.value = "";
  body.classList.remove("modal");
}

// –§—É–Ω–∫—Ü–∏—è setItemToLocalStorage –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–≤–æ–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã id title steps –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –∏–∑ –≤–Ω—É—Ç—Ä–∏ setItemToLocalStorage –≤–Ω—É—Ç—Ä–∏ addTestCaseItem
// –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ id title.value steps.value –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –æ–±—ä–µ–∫—Ç tests –Ω–∞—à–∏ —à–∞–≥–∏ –∏ –ø–æ—Ç–æ–º —Å–µ—Ä–∏–ª–∏–∑—É–µ—Ç –∏ –ø–µ—Ä–µ–¥–∞—ë—Ç –≤ localStorage
function setItemToLocalStorage(id, titleValue, stepsValue) {
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º tcTitle.value, tcSteps.value –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
  let tests = {
    id,
    title: titleValue,
    steps: stepsValue,
    timestamp: new Date().getTime(),
    // date: new Date().toLocaleString(),
  };

  // –ö–ª–∞–¥—ë–º –≤—Å–µ —ç—Ç–æ –≤ –∫–ª—é—á test –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ–±—ä–µ–∫—Ç —Å–µ—Ä–∏–ª–∏–∑—É–µ–º –∏ –ø—Ä–∏–±–∞–≤–ª—è–µ–º –∏—Ç–µ—Ä–∞—Ü–∏—é scenarioCount
  localStorage.setItem(id, JSON.stringify(tests));
}

// –¢–ï–°–¢ –¢–ï–õ–ï–ì–ò
function testTelegram() {
  telegramBlock.innerHTML = `<iframe id="telegram-post-autotests_cloud-17" class="telegram-iframe" src="https://t.me/11111?embed=1&discussion=1&comments_limit=5&light=1"></iframe>`;
  telegramBlock.classList.remove("hidden");
  infoBlock.classList.add("hidden");
}

telegramTestBtn.addEventListener("click", testTelegram);

 
modalBtn.addEventListener("click", modalOpen);
modalBtnClose.addEventListener("click", modalClose);
optionsBtn.addEventListener("click", optionsToggle);
