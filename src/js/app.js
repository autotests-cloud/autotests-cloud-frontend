import {
  appBlock,
  mainFormSize,
  body,
  mainForm,
  mainBtn,
  mainBtn2,
  modalBtn,
  modalBtnClose,
  optionsBtn,
  informationSection,
  informationToggle,
  mainFormSectionToggle,
  calcContentHeight,
  titleTextarea,
  consoleContainer,
  consoleContainerContent,
  selectingAllNestedCheckboxes,
  checkAllGithub,
  checkBoxesGithub,
  checkAllJenkins,
  checkBoxesJenkins,
} from "./ui.js"; // –†–∞–±–æ—Ç–∞ c UI –∏ DOM

import "./onCreateTestCaseStorage.js"; // –ú–æ–¥—É–ª—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤ Storage

import { create_UUID } from "./StringUtils.js"; // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ UUID
import dataLoaderFromStorage from "./dataLoaderFromStorage.js"; //–í—ã–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–µ–∫–∞—ç–Ω–¥–∞

let stompClient = null; // stompClient —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç –≤ –Ω—ë–º
let uuid = create_UUID(); // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä

selectingAllNestedCheckboxes(checkAllGithub, checkBoxesGithub, "github"); // –ø–µ—Ä–µ–±–æ—Ä  –¥–µ—Ä–µ–≤–∞ –≥–∏—Ç—Ö–∞–±–∞
selectingAllNestedCheckboxes(checkAllJenkins, checkBoxesJenkins, "jenkins"); // –ø–µ—Ä–µ–±–æ—Ä  –¥–µ—Ä–µ–≤–∞ jenkins

// –ü–æ–¥—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

// –§—É–Ω–∫—Ü–∏—è connect() —Å–æ–∑–¥–∞—ë—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä new SockJS —Å –∞–¥—Ä–µ—Å–æ–º —Å–æ–∫–µ—Ç–∞ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –æ—Ç–ø—Ä–∞–≤–∞–∫–∞ —Å–æ–∫–µ—Ç–æ–≤ –≤ spring
// –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ STOMP –æ–Ω –¥–æ–ª–∂–µ–Ω –≤—ã–∑–≤–∞—Ç—å —Å–≤–æ–π stompClient.connect() –º–µ—Ç–æ–¥ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ STOMP.
// –ú–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–∞, login –∏ passcode —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–∞–∫–æ–π-—Ç–æ client-id.
function connect() {
  console.log("connect +");
  // const socket = new SockJS("https://api.autotests.cloud/ws"); // todo add exception
  const socket = new SockJS("http://localhost:8080/ws"); // todo add exception
  // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Stomp.client(url)–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—Ç–∏–≤–Ω—ã—Ö –≤–µ–±-—Å–æ–∫–µ—Ç–æ–≤ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ, Stomp.over(ws) –µ—Å–ª–∏ –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥—Ä—É–≥–æ–π —Ç–∏–ø –≤–µ–±-—Å–æ–∫–µ—Ç–æ–≤.
  stompClient = Stomp.over(socket);

  //–ü–æ–¥–∫–ª—é—á–∞–º —á–µ—Ä–µ–∑ SockJS —á–µ—Ä–µ–∑ STOMP –∫  –±—ç–∫—ç–Ω–¥—É Spring
  stompClient.connect({}, function (status) {
    console.log("Connected: " + status);

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –ø—Ä–æ—Å–ª—É—à–∫—É —Å –±–µ–∫—ç–Ω–¥–∞
    stompClient.subscribe(`/topic/${uuid}`, function (message) {
      console.log("Message: " + message);

      // –í—ã–∑—ã–≤–µ–º —Ñ—É–Ω–∫—Ü–∏—é addSocketEvent() –∏ –ø–µ—Ä–µ–¥–∞–µ–º —Ç—É–¥–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä JSON.parse(message.body) —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Å –±–µ–∫—ç–Ω–¥–∞
      addSocketEvent(JSON.parse(message.body));
    });
  });
}

// –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–µ–∫—ç–Ω–¥–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã div.instruction -> span.command
// –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç contentType switch \ case —Ä–µ–Ω–¥–µ—Ä–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç–≤–µ—Ç–æ–≤ —Å –±–µ–∫—ç–Ω–¥–∞
function addSocketEvent(message) {
  let lineCodeBlock = document.createElement("div");
  lineCodeBlock.className = "instruction";

  let lineCodeMessage = document.createElement("span");
  lineCodeMessage.className = "command";

  // pre.setAttribute("data-prefix", message.prefix);

  switch (message.contentType) {
    case "info":
      // pre.className = "list-auto flex";
      lineCodeMessage.innerHTML = `<code>${message.content}</code>`;
      break;
    case "generated":
      // pre.className = "text-warning flex";
      lineCodeMessage.innerHTML = `<code>${message.content}<a target="_blank" class="green-link" href="${message.url}">${message.urlText}</a></div></code>`;
      break;
    case "launched":
      // pre.className = "text-warning flex";
      lineCodeMessage.innerHTML = `<code>${message.content}<a target="_blank" class="green-link" href="${message.url}">${message.urlText}</a> </code> <label class="loader"></label>`;
      break;
    case "finished":
      // pre.className = "text-warning flex";
      lineCodeMessage.innerHTML = `<code>${message.content}<a target="_blank" class="green-link" href="${message.url}">${message.urlText}</a></div></code>`;
      document.querySelector(".loader").remove();
      break;
    case "in progress":
      // pre.className = "text-warning flex";
      lineCodeMessage.innerHTML = `<code>${message.content} </code>`;
      break;
    case "can-automate":
      // pre.className = "flex";
      lineCodeMessage.innerHTML = `<code>${message.content}</code>`;
      break;
    case "telegram-info":
      // pre.className = "flex";
      lineCodeMessage.innerHTML = `<code>${message.content}<a target="_blank" class="blue-link" href="${message.url}">${message.urlText}</a> üëà</code>`;
      break;
    case "telegram-notification":
      // pre.className = "flex";
      lineCodeMessage.innerHTML = `<code> </code>`;
      displayNotification(message.content);
      break;
    case "empty":
      // pre.className = "list-auto flex";
      lineCodeMessage.innerHTML = `<code> </code>`;
      break;
    case "error":
      // pre.className = "text-error flex";
      lineCodeMessage.innerHTML = `<code>${message.content}</code>`;
      break;
  }
  lineCodeBlock.append(lineCodeMessage);
  consoleContainerContent.append(lineCodeBlock);
  // scroll.getScrollElement().scrollTo({ top: 5000, behavior: "smooth" });
}

//–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω—è–∏ —Å —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞
function displayNotification(messagePath) {
  telegramBlock.innerHTML = `<iframe id="telegram-post-autotests_cloud-17"
    class="telegram-iframe" src="https://t.me/${messagePath}?embed=1&discussion=1&comments_limit=5&light=1"></iframe>`;
  telegramBlock.classList.remove("hidden");
}

function replaceValuesToBoolean(params) {
  return JSON.stringify(params)
    .replaceAll('"on"', true)
    .replaceAll('"off"', false);
}

//–§—É–Ω–∫—Ü–∏—è initForm –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤
const initForm = () => {
  connect(); // –í—ã–∑—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–æ–∫–µ—Ç–æ–≤

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∏ –ø–µ—Ä–µ–¥–∞–µ–º –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
  function submitForm(event) {
    // –ù–ï –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç.–µ –æ—Ç–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
    event.preventDefault();
    // alert(document.getElementById('input-title').value);
    // –ë–ª–æ–∫—É div#app –¥–æ–±–∞–≤–ª—è–µ–µ–º –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏
    appBlock.classList.add("hidden");
    informationSection.classList.add("hidden");
    calcContentHeight();

    // –í –ø–µ—Ä–µ–º–µ–Ω—É—é formData –º—ã –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä FormData(mainForm), –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç FormData —Ç.–µ
    // HTML-—Ñ–æ—Ä–º—É –Ω–∞ –æ—Å–Ω–æ–≤–µ mainForm –≥–ª–∞–≤–Ω–æ–π —Ñ–æ—Ä–º—ã form#objective.
    // –°—É—â–µ—Å—Ç–≤—É—é—â–∞—è HTML-—Ñ–æ—Ä–º–∞, –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—É—Å—Ç–∞—è —Ñ–æ—Ä–º–∞.
    const formData = new FormData(mainForm);
    // –í –ø–µ—Ä–µ–º–µ–Ω—É—é values –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã –º–µ—Ç–æ–¥–∞ Object.fromEntries() –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—â–µ–≥–æ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–±—ä–µ–∫—Ç –∏–∑
    // –º–µ—Ç–æ–¥ FormData.entries() –∫–æ—Ç–æ—Ä—ã–π –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç [Symbol.iterator], –ø–æ–∑–≤–æ–ª—è—é—â–µ–º—É –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –≤—Å–µ–º –∫–ª—é—á–∞–º/–∑–Ω–∞—á–µ–Ω–∏—è–º –≤ —ç—Ç–æ–º –æ–±—ä–µ–∫—Ç–µ.
    // –ö–ª—é—á –∫–∞–∂–¥–æ–π –ø–∞—Ä—ã - —ç—Ç–æ –æ–±—ä–µ–∫—Ç USVString, –∑–Ω–∞—á–µ–Ω–∏–µ - —ç—Ç–æ USVString –∏–ª–∏ Blob.
    let values = Object.fromEntries(formData.entries());
    console.warn("–û–±—ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–µ–∏–µ", values);
    console.warn(
      "–û–±—ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–µ–∏–µ —Å –∞–≤—Ç–æ–∑–∞–º–µ–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏—è",
      replaceValuesToBoolean(values)
    );
    console.log(values instanceof Object);

    if (values.url) {
      // –ï—Å–ª–∏ values.url —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      // values.price = "free";
      // values.email = "admin@qa.guru";
      values.tests = dataLoaderFromStorage(); //–í —Å–≤–æ–π—Å—Ç–≤–æ tests –æ–±—ä–µ–∫—Ç–∞ values –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ dataLoaderFromStorage() –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
      delete values["g-recaptcha-response"]; // –£–¥–∞–ª—è–µ–º —Ä–µ–∫–∞–ø—á—É
      // –í –ø–µ—Ä–µ–º–µ–Ω—É—é –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É JSON –∏–∑ –æ–±—ä–µ–∫—Ç–∞ values –∑–∞–º–µ–Ω—è—è on \ off –Ω–∞ –±—É–ª–∏–Ω–æ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è

      console.log("–¥–∞–Ω–Ω—ã–µ —Å –∑–∞–º–µ–Ω–æ–π " + replaceValuesToBoolean(values));
      // –ü–µ—Ä–µ–¥–∞–µ–º
      stompClient.send(
        `/app/orders/${uuid}`,
        {},
        replaceValuesToBoolean(values)
      );

      // consoleContainer.classList.remove("hidden");
      // –£–±–∏—Ä–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Ñ–æ—Ä–º—É
      mainForm.classList.add("hidden"); // –ü–æ–∫–∞–∑—ã–≤—ã–µ–º iframeBlock

      mainForm.reset();
    } else {
      if (!titleTextarea.value) {
        titleTextarea.classList.add("border-red-500");
      }

      setTimeout(() => {
        // mainTextarea.classList.remove("border-red-500");
        titleTextarea.classList.remove("border-red-500");
      }, 2000);
    }
  }

  mainBtn.addEventListener("click", submitForm);
  mainBtn2.addEventListener("click", submitForm);
};

export { initForm };

initForm();

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function modalOpen() {
  body.classList.add("modal");
}
// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function modalClose() {
  body.classList.remove("modal");
}
// –§—É–Ω–∫—Ü–∏—è —Ç–æ–≥–ª
function optionsToggle() {
  body.classList.toggle("options-open");
}

window.onload = function setContentHeightFirst() {
  appBlock.style.height = "calc(" + mainFormSize.offsetHeight + "px + 1.5rem)";
};

modalBtn.addEventListener("click", modalOpen);
modalBtnClose.addEventListener("click", modalClose);
optionsBtn.addEventListener("click", optionsToggle);

localStorage.getItem("steps") !== null || localStorage.length > 0
  ? optionsToggle()
  : body.classList.toggle("options-open");
